<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Business Frontpage - Start Bootstrap Template</title>
    <!-- Favicon-->
    <!-- Bootstrap icons-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet" />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="css/styles.css" rel="stylesheet" />
    <style>
        .card-body {
            text-align: center;
        }
    </style>
</head>

<body>
    <!-- Responsive navbar-->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top bg-dark">
        <div class="container px-5">
            <a class="navbar-brand" href="#!">LIGHTING ROULETTE</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item"><a class="nav-link active" aria-current="page" href="choix.html">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="index.html">Déconexion</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- Header-->
    <!-- Features section-->
    <section class="py-5 border-bottom" id="features">
        <div class="container px-5 my-5">
            <div class="row">
                <div class="col">
                    <label for="formFileMultiple" class="form-label">Importer 5 images Screen (500 numéros)</label>
                </div>
                <div class="col">
                    <input class="form-control" type="file" id="imageInput">
                </div>
                <div class="col">
                    <button class="btn btn-primary mb-3" id="ok">OK</button>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p id="status"></p>
                </div>
                <div class="col">
                    <pre id="output"></pre>
                </div>
            </div>
        </div>
        </div>
    </section>
    <script>

        // Remplacez par votre clé API Google Cloud
        const API_KEY = "AIzaSyBS3Q6aKo2CqixPebC3Ft6VyG5va07JM-w";

        // URL de l'API Google Cloud Vision
        const VISION_API_URL = `https://vision.googleapis.com/v1/images:annotate?key=${API_KEY}`;

        // Fonction pour convertir une image en base64
        function convertToBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = () => resolve(reader.result.split(",")[1]); // Enlever "data:image/..."
                reader.onerror = (error) => reject(error);
                reader.readAsDataURL(file);
            });
        }

        // Fonction pour analyser une image avec Google Cloud Vision
        async function extractTextFromImage(base64Image) {
            const requestBody = {
                requests: [
                    {
                        image: {
                            content: base64Image,
                        },
                        features: [
                            {
                                type: "TEXT_DETECTION",
                            },
                        ],
                    },
                ],
            };

            const response = await fetch(VISION_API_URL, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(requestBody),
            });

            if (!response.ok) {
                throw new Error(`Erreur API: ${response.statusText}`);
            }

            const result = await response.json();
            return result.responses[0]?.fullTextAnnotation?.text || "Aucun texte trouvé.";

        }

        document.getElementById("imageInput").addEventListener("change", async (event) => {
            const file = event.target.files[0];
            if (!file) return;

            const statusElement = document.getElementById("status");
            const outputElement = document.getElementById("output");

            try {
                statusElement.textContent = "Analyse de l'image en cours...";
                outputElement.textContent = "";

                const base64Image = await convertToBase64(file);

                const text = await extractTextFromImage(base64Image);



                statusElement.textContent = "Analyse terminée.";

                var tab_1 = [], tab_2 = [], tab_3 = [], tab_4 = [], tab_5 = [], tab_6 = [], tab_7 = [], tab_8 = [], tab_9 = [], tab_10 = [], tab_11 = [], tab_12 = [], tab_13 = [], tab_14 = [], tab_15 = [], tab_16 = [], tab_17 = [], tab_18 = [], tab_19 = [], tab_20 = [], tab_21 = [], tab_22 = [], tab_23 = [], tab_24 = [], tab_25 = [], tab_26 = [], tab_27 = [], tab_28 = [], tab_29 = [], tab_30 = [], tab_31 = [], tab_32 = [], tab_33 = [], tab_34 = [], tab_35 = [], tab_36 = [];
                var inputs = 25;
                let reg1 = text.replace(500, '');
                let textreg = reg1.replace(/[^0-9]+/g, ",");
                //let tableau = textreg.split(',');

                const tableau = textreg
                    .split(',')          // Diviser la chaîne en fonction des virgules
                    .filter(val => val)  // Supprimer les valeurs vides (comme avant le premier chiffre)
                    .map(Number);        // Convertir les éléments en nombres

                //console.log(tableau);

                for (let i = 0; i < tableau.length - 1; i++) {

                    if (tableau[i] === 1) {
                        tab_1.push(tableau[i + 1])

                    }
                    if (tableau[i] === 2) {
                        tab_2.push(tableau[i + 1])

                    }
                    if (tableau[i] === 3) {
                        tab_3.push(tableau[i + 1])

                    }
                    if (tableau[i] === 4) {
                        tab_4.push(tableau[i + 1])

                    }
                    if (tableau[i] === 5) {
                        tab_5.push(tableau[i + 1])

                    }
                    if (tableau[i] === 6) {
                        tab_6.push(tableau[i + 1])

                    }

                    if (tableau[i] === 7) {
                        tab_7.push(tableau[i + 1])

                    }
                    if (tableau[i] === 8) {
                        tab_8.push(tableau[i + 1])

                    }
                    if (tableau[i] === 9) {
                        tab_9.push(tableau[i + 1])

                    }
                    if (tableau[i] === 10) {
                        tab_10.push(tableau[i + 1])

                    }
                    if (tableau[i] === 11) {
                        tab_11.push(tableau[i + 1])

                    }
                    if (tableau[i] === 12) {
                        tab_12.push(tableau[i + 1])

                    }
                    if (tableau[i] === 13) {
                        tab_13.push(tableau[i + 1])

                    }


                    if (tableau[i] === 14) {
                        tab_14.push(tableau[i + 1])

                    }
                    if (tableau[i] === 15) {
                        tab_15.push(tableau[i + 1])

                    }
                    if (tableau[i] === 16) {
                        tab_16.push(tableau[i + 1])

                    }
                    if (tableau[i] === 17) {
                        tab_17.push(tableau[i + 1])

                    }
                    if (tableau[i] === 18) {
                        tab_18.push(tableau[i + 1])

                    }
                    if (tableau[i] === 19) {
                        tab_19.push(tableau[i + 1])

                    }

                    if (tableau[i] === 20) {
                        tab_20.push(tableau[i + 1])

                    }
                    if (tableau[i] === 21) {
                        tab_21.push(tableau[i + 1])

                    }
                    if (tableau[i] === 22) {
                        tab_22.push(tableau[i + 1])

                    }
                    if (tableau[i] === 23) {
                        tab_23.push(tableau[i + 1])

                    }
                    if (tableau[i] === 24) {
                        tab_24.push(tableau[i + 1])

                    }
                    if (tableau[i] === 25) {
                        tab_25.push(tableau[i + 1])

                    }
                    if (tableau[i] === 26) {
                        tab_26.push(tableau[i + 1])

                    }

                    if (tableau[i] === 27) {
                        tab_27.push(tableau[i + 1])

                    }
                    if (tableau[i] === 28) {
                        tab_28.push(tableau[i + 1])

                    }
                    if (tableau[i] === 29) {
                        tab_29.push(tableau[i + 1])

                    }
                    if (tableau[i] === 30) {
                        tab_30.push(tableau[i + 1])

                    }
                    if (tableau[i] === 31) {
                        tab_31.push(tableau[i + 1])

                    }
                    if (tableau[i] === 32) {
                        tab_32.push(tableau[i + 1])

                    }
                    if (tableau[i] === 33) {
                        tab_33.push(tableau[i + 1])

                    }

                    if (tableau[i] === 34) {
                        tab_34.push(tableau[i + 1])

                    }
                    if (tableau[i] === 35) {
                        tab_35.push(tableau[i + 1])

                    }
                    if (tableau[i] === 36) {
                        tab_36.push(tableau[i + 1])

                    }




                }

                const l1 = tab_1.length;
                const l2 = tab_2.length;
                const l3 = tab_3.length;
                const l4 = tab_4.length;
                const l5 = tab_5.length;
                const l6 = tab_6.length;
                const l7 = tab_7.length;
                const l8 = tab_8.length;
                const l9 = tab_9.length;
                const l10 = tab_10.length;
                const l11 = tab_11.length;
                const l12 = tab_12.length;
                const l13 = tab_13.length;
                const l14 = tab_14.length;
                const l15 = tab_15.length;
                const l16 = tab_16.length;
                const l17 = tab_17.length;
                const l18 = tab_18.length;
                const l19 = tab_19.length;
                const l20 = tab_20.length;
                const l21 = tab_21.length;
                const l22 = tab_22.length;
                const l23 = tab_23.length;
                const l24 = tab_24.length;
                const l25 = tab_25.length;
                const l26 = tab_26.length;
                const l27 = tab_27.length;
                const l28 = tab_28.length;
                const l29 = tab_29.length;
                const l30 = tab_30.length;
                const l31 = tab_31.length;
                const l32 = tab_32.length;
                const l33 = tab_33.length;
                const l34 = tab_34.length;
                const l35 = tab_35.length;
                const l36 = tab_36.length;

                const tab_final = [l1, l2, l3, l4, l5, l6];

                const tbl = [
                    [1, l1],
                    [2, l2],
                    [3, l3],
                    [4, l4],
                    [5, l5],
                    [6, l6],
                    [7, l7],
                    [8, l8],
                    [9, l9],
                    [10, l10],
                    [11, l11],
                    [12, l12],
                    [13, l13],
                    [14, l14],
                    [15, l15],
                    [16, l16],
                    [17, l17],
                    [18, l18],
                    [19, l19],
                    [20, l20],
                    [21, l21],
                    [22, l22],
                    [23, l23],
                    [24, l24],
                    [25, l25],
                    [26, l26],
                    [27, l27],
                    [28, l28],
                    [29, l29],
                    [30, l30],
                    [31, l31],
                    [32, l32],
                    [33, l33],
                    [34, l34],
                    [35, l35],
                    [36, l36]
                ];

                tbl.sort((a, b) => a[1] - b[1]);

                console.log(tbl);

                const tableauUnique1 = [...new Set(tab_1)];
                const tableauUnique2 = [...new Set(tab_2)];
                const tableauUnique3 = [...new Set(tab_3)];
                const tableauUnique4 = [...new Set(tab_4)];
                const tableauUnique5 = [...new Set(tab_5)];
                const tableauUnique6 = [...new Set(tab_6)];
                const tableauUnique7 = [...new Set(tab_7)];
                const tableauUnique8 = [...new Set(tab_8)];
                const tableauUnique9 = [...new Set(tab_9)];
                const tableauUnique10 = [...new Set(tab_10)];
                const tableauUnique11 = [...new Set(tab_11)];
                const tableauUnique12 = [...new Set(tab_12)];
                const tableauUnique13 = [...new Set(tab_13)];
                const tableauUnique14 = [...new Set(tab_14)];
                const tableauUnique15 = [...new Set(tab_15)];
                const tableauUnique16 = [...new Set(tab_16)];
                const tableauUnique17 = [...new Set(tab_17)];
                const tableauUnique18 = [...new Set(tab_18)];
                const tableauUnique19 = [...new Set(tab_19)];
                const tableauUnique20 = [...new Set(tab_20)];
                const tableauUnique21 = [...new Set(tab_21)];
                const tableauUnique22 = [...new Set(tab_22)];
                const tableauUnique23 = [...new Set(tab_23)];
                const tableauUnique24 = [...new Set(tab_24)];
                const tableauUnique25 = [...new Set(tab_25)];
                const tableauUnique26 = [...new Set(tab_26)];
                const tableauUnique27 = [...new Set(tab_27)];
                const tableauUnique28 = [...new Set(tab_28)];
                const tableauUnique29 = [...new Set(tab_29)];
                const tableauUnique30 = [...new Set(tab_30)];
                const tableauUnique31 = [...new Set(tab_31)];
                const tableauUnique32 = [...new Set(tab_32)];
                const tableauUnique33 = [...new Set(tab_33)];
                const tableauUnique34 = [...new Set(tab_34)];
                const tableauUnique35 = [...new Set(tab_35)];
                const tableauUnique36 = [...new Set(tab_36)];




                const ln1 = tableauUnique1.length;
                const ln2 = tableauUnique2.length;
                const ln3 = tableauUnique3.length;
                const ln4 = tableauUnique4.length;
                const ln5 = tableauUnique5.length;
                const ln6 = tableauUnique6.length;
                const ln7 = tableauUnique7.length;
                const ln8 = tableauUnique8.length;
                const ln9 = tableauUnique9.length;
                const ln10 = tableauUnique10.length;
                const ln11 = tableauUnique11.length;
                const ln12 = tableauUnique12.length;
                const ln13 = tableauUnique13.length;
                const ln14 = tableauUnique14.length;
                const ln15 = tableauUnique15.length;
                const ln16 = tableauUnique16.length;
                const ln17 = tableauUnique17.length;
                const ln18 = tableauUnique18.length;
                const ln19 = tableauUnique19.length;
                const ln20 = tableauUnique20.length;
                const ln21 = tableauUnique21.length;
                const ln22 = tableauUnique22.length;
                const ln23 = tableauUnique23.length;
                const ln24 = tableauUnique24.length;
                const ln25 = tableauUnique25.length;
                const ln26 = tableauUnique26.length;
                const ln27 = tableauUnique27.length;
                const ln28 = tableauUnique28.length;
                const ln29 = tableauUnique29.length;
                const ln30 = tableauUnique30.length;
                const ln31 = tableauUnique31.length;
                const ln32 = tableauUnique32.length;
                const ln33 = tableauUnique33.length;
                const ln34 = tableauUnique34.length;
                const ln35 = tableauUnique35.length;
                const ln36 = tableauUnique36.length;


                console.log(tableauUnique1 + " " + l1 + " " + ln1);

                console.log(tableauUnique2 + " " + l2 + " " + ln2);

                console.log(tableauUnique3 + " " + l3 + " " + ln3);

                console.log(tableauUnique4 + " " + l4 + " " + ln4);

                console.log(tableauUnique5 + " " + l5 + " " + ln5);

                console.log(tableauUnique6 + " " + l6 + " " + ln6);

                console.log(tableauUnique7 + " " + l7 + " " + ln7);

                console.log(tableauUnique8 + " " + l8 + " " + ln8);

                console.log(tableauUnique9 + " " + l9 + " " + ln9);

                console.log(tableauUnique10 + " " + l10 + " " + ln10);

                console.log(tableauUnique11 + " " + l11 + " " + ln11);

                console.log(tableauUnique12 + " " + l12 + " " + ln12);

                console.log(tableauUnique13 + " " + l13 + " " + ln13);

                console.log(tableauUnique14 + " " + l14 + " " + ln14);

                console.log(tableauUnique15 + " " + l15 + " " + ln15);

                console.log(tableauUnique16 + " " + l16 + " " + ln16);

                console.log(tableauUnique17 + " " + l17 + " " + ln17);

                console.log(tableauUnique18 + " " + l18 + " " + ln18);

                console.log(tableauUnique19 + " " + l19 + " " + ln19);

                console.log(tableauUnique20 + " " + l20 + " " + ln20);

                console.log(tableauUnique21 + " " + l21 + " " + ln21);

                console.log(tableauUnique22 + " " + l22 + " " + ln22);

                console.log(tableauUnique23 + " " + l23 + " " + ln23);

                console.log(tableauUnique24 + " " + l24 + " " + ln24);

                console.log(tableauUnique25 + " " + l25 + " " + ln25);

                console.log(tableauUnique26 + " " + l26 + " " + ln26);

                console.log(tableauUnique27 + " " + l27 + " " + ln27);

                console.log(tableauUnique28 + " " + l28 + " " + ln28);

                console.log(tableauUnique29 + " " + l29 + " " + ln29);

                console.log(tableauUnique30 + " " + l30 + " " + ln30);

                console.log(tableauUnique31 + " " + l31 + " " + ln31);

                console.log(tableauUnique32 + " " + l32 + " " + ln32);

                console.log(tableauUnique33 + " " + l33 + " " + ln33);

                console.log(tableauUnique34 + " " + l34 + " " + ln34);

                console.log(tableauUnique35 + " " + l35 + " " + ln35);

                console.log(tableauUnique36 + " " + l36 + " " + ln36);

                /////////////////////////////////////////////////////////////////////
                var partie;
                var resultat;
                if (inputs === 25) {
                    var nbr_case1 = 13 - ln25;
                    console.log(nbr_case1);

                    const keys = tbl.map(pair => pair[0]);
                    tableauUnique25.push(...keys);
                    resultat = [...new Set(tableauUnique25)];
                    partie = resultat.splice(0, 13);

                }

                console.log(partie);












                //onsole.log(tab_1.toString());

            } catch (error) {
                statusElement.textContent = "Erreur lors de l'analyse.";
            }
        });

    </script>
    <!-- Footer-->
    <footer class="py-5 bg-dark" style=" position: fixed;height: 100px;bottom: 0;width: 100%;">
        <div class="container px-5">
            <p class="m-0 text-center text-white">Copyright &copy; OBJ-DEV 2024</p>
        </div>
    </footer>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
</body>

</html>